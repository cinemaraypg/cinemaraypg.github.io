import { NodeMaterialBlock } from '../nodeMaterialBlock';
import { NodeMaterialBuildState } from '../nodeMaterialBuildState';
import { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';
import { NodeMaterial } from '../nodeMaterial';
import "../../../Shaders/ShadersInclude/fresnelFunction";
/**
 * Block used to compute fresnel value
 */
export declare class FresnelBlock extends NodeMaterialBlock {
    /**
     * Create a new FresnelBlock
     * @param name defines the block name
     */
    constructor(name: string);
    /**
     * Gets the current class name
     * @returns the class name
     */
    getClassName(): string;
    /**
     * Gets the world normal input component
     */
    readonly worldNormal: NodeMaterialConnectionPoint;
    /**
    * Gets the view direction input component
    */
    readonly viewDirection: NodeMaterialConnectionPoint;
    /**
    * Gets the bias input component
    */
    readonly bias: NodeMaterialConnectionPoint;
    /**
    * Gets the camera (or eye) position component
    */
    readonly power: NodeMaterialConnectionPoint;
    /**
     * Gets the fresnel output component
     */
    readonly fresnel: NodeMaterialConnectionPoint;
    autoConfigure(material: NodeMaterial): void;
    protected _buildBlock(state: NodeMaterialBuildState): this;
}
