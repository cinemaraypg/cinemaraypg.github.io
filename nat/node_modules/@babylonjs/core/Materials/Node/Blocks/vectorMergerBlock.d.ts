import { NodeMaterialBlock } from '../nodeMaterialBlock';
import { NodeMaterialBuildState } from '../nodeMaterialBuildState';
import { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';
/**
 * Block used to create a Vector2/3/4 out of individual inputs (one for each component)
 */
export declare class VectorMergerBlock extends NodeMaterialBlock {
    /**
     * Create a new VectorMergerBlock
     * @param name defines the block name
     */
    constructor(name: string);
    /**
     * Gets the current class name
     * @returns the class name
     */
    getClassName(): string;
    /**
     * Gets the x component (input)
     */
    readonly x: NodeMaterialConnectionPoint;
    /**
     * Gets the y component (input)
     */
    readonly y: NodeMaterialConnectionPoint;
    /**
     * Gets the z component (input)
     */
    readonly z: NodeMaterialConnectionPoint;
    /**
     * Gets the w component (input)
     */
    readonly w: NodeMaterialConnectionPoint;
    /**
     * Gets the xyzw component (output)
     */
    readonly xyzw: NodeMaterialConnectionPoint;
    /**
     * Gets the xyz component (output)
     */
    readonly xyz: NodeMaterialConnectionPoint;
    /**
     * Gets the xy component (output)
     */
    readonly xy: NodeMaterialConnectionPoint;
    protected _buildBlock(state: NodeMaterialBuildState): this;
}
