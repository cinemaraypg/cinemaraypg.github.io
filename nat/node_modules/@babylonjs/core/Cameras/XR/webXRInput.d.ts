import { Observable } from "../../Misc/observable";
import { IDisposable } from "../../scene";
import { WebXRExperienceHelper } from "./webXRExperienceHelper";
import { WebXRController } from './webXRController';
/**
 * XR input used to track XR inputs such as controllers/rays
 */
export declare class WebXRInput implements IDisposable {
    /**
     * Base experience the input listens to
     */
    baseExperience: WebXRExperienceHelper;
    /**
     * XR controllers being tracked
     */
    controllers: Array<WebXRController>;
    private _frameObserver;
    private _stateObserver;
    /**
     * Event when a controller has been connected/added
     */
    onControllerAddedObservable: Observable<WebXRController>;
    /**
     * Event when a controller has been removed/disconnected
     */
    onControllerRemovedObservable: Observable<WebXRController>;
    /**
     * Initializes the WebXRInput
     * @param baseExperience experience helper which the input should be created for
     */
    constructor(
    /**
     * Base experience the input listens to
     */
    baseExperience: WebXRExperienceHelper);
    private _onInputSourcesChange;
    private _addAndRemoveControllers;
    /**
     * Disposes of the object
     */
    dispose(): void;
}
